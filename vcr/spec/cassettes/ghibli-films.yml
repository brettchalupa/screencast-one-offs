---
http_interactions:
- request:
    method: get
    uri: https://ghibliapi.herokuapp.com/films
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - ghibliapi.herokuapp.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Connection:
      - keep-alive
      X-Powered-By:
      - Express
      Vary:
      - Origin, Accept-Encoding
      Access-Control-Allow-Credentials:
      - 'true'
      Cache-Control:
      - no-cache
      Pragma:
      - no-cache
      Expires:
      - "-1"
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - application/json; charset=utf-8
      Etag:
      - W/"6843-gRz3a+Nguw5yV5B228BRSJpc4/k"
      Date:
      - Fri, 02 Jul 2021 15:32:07 GMT
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 02 Jul 2021 15:32:07 GMT
recorded_with: VCR 6.0.0
